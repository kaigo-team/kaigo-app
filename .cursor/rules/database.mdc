---
alwaysApply: true
---

# データベースルール

## テーブル定義

### care_assessment_inputs テーブル
要介護度算出アプリの入力データを保存するテーブル

#### カラム定義
- `id` (bigint, unsigned, primary key, auto increment) - 主キー
- `title` (string, nullable) - タイトル/名称（ユーザーが自由に入力可能）
- `answers` (json) - 回答データ（JSON形式で保存、全ての質問に対する回答を含む）
- `care_time` (integer, nullable) - 要介護認定基準時間（分）、結果画面で計算した値を保存
- `care_level` (string, nullable) - 要介護度の区分（非該当、要支援1、要支援2・要介護1、要介護2、要介護3、要介護4、要介護5）
- `status` (string, default: 'draft') - 進捗状況（'draft': 一時保存、'completed': 完了）
- `user_id` (bigint, unsigned, nullable, foreign key to users.id) - ユーザーID（認証機能を使用する場合）
- `created_at` (timestamp, nullable) - 作成日時
- `updated_at` (timestamp, nullable) - 更新日時

#### インデックス
- `user_id` にインデックスを追加（ユーザーごとにフィルタリングする場合）
- `status` にインデックスを追加（進捗状況でフィルタリングする場合）
- `created_at` にインデックスを追加（日時でソートする場合）
- `updated_at` にインデックスを追加（更新日時でソートする場合）

#### 外部キー制約
- `user_id` -> `users.id` (onDelete: cascade) - ユーザー削除時に紐づく入力データも削除

#### データ型の詳細
- `answers` (json): 
    - 構造例: {"1-1": ["左上肢", "右上肢"], "2-4": "自立（介助なし）", ...}
    - チェックボックスの場合は配列、ラジオボタンの場合は文字列として保存
- `status` (string):
    - 値: 'draft' (一時保存), 'completed' (完了)
    - デフォルト: 'draft'
- `care_level` (string):
    - 値: '非該当', '要支援1', '要支援2・要介護1', '要介護2', '要介護3', '要介護4', '要介護5'

## シーディング
開発環境用のテストデータをシーディングする場合は、CareAssessmentInputSeederを作成
